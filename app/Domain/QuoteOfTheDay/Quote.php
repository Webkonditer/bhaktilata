<?php

namespace App\Domain\QuoteOfTheDay;

use App\Common\Model;
use App\User;
use Carbon\Carbon;

/**
 * Class Quote
 *
 * @package App\Domain\QuoteOfTheDay
 *
 * @property \DateTime $day
 * @property \DateTime $date
 * @property string $text
 * @property string $location
 * @property string $author
 * @property string $status
 * @property int $user_id
 */
class Quote extends Model
{
    protected $table = 'quote_of_the_day';

    const STATUS_PUBLISHED = 'published';

    protected $rules = [
        'day' => 'string|required',
        'date' => 'date',
        'location' => 'string',
        'text' => 'string|required',
        'author' => 'string',
    ];

    protected $fillable = [
        'day',
        'date',
        'location',
        'text',
        'author',
    ];

    protected $casts = [
        'day' => 'date',
        'date' => 'date',
    ];

    public function setPublishStatus($published)
    {
        $this->status = $published ? 'published' : 'unpublished';
    }

    public function isPublished(): bool
    {
        return $this->status && $this->status == static::STATUS_PUBLISHED;
    }

    public function setUser(User $user)
    {
        $this->user_id = $user->id;
    }

    public function fill(array $attributes)
    {
        $datesAttributes = array_keys(array_filter($this->getCasts(), function($type) {
            return $type == 'date';
        }));
        foreach ($datesAttributes as $attributeName) {
            if (!empty($attributes[$attributeName])) {
                $attributes[$attributeName] = Carbon::createFromFormat('d.m.Y', $attributes[$attributeName]);
            }
        }
        return parent::fill($attributes); // TODO: Change the autogenerated stub
    }


}
